/*
 * register_map.h
 *
 *  Created on: Nov 7, 2017
 *      Author: smate
 */

#ifndef REGISTER_MAP_H_
#define REGISTER_MAP_H_

#include "stm32f4xx_hal.h"
#include "cmsis_os.h"

//DEFINES
#define HMI_BUFF_RX_SIZE 128
#define HMI_BUFF_TX_SIZE 128
#define BT_BUFF_RX_SIZE 128
#define BT_BUFF_TX_SIZE 1024
#define LINE_BUFF_RX_SIZE 128
#define LINE_BUFF_TX_SIZE 128
#define MEMS_BUFF_RX_SIZE 128
#define MEMS_BUFF_TX_SIZE 128

volatile uint8_t BT_CONNECTED;
volatile uint8_t hmi_buffer_rx[HMI_BUFF_RX_SIZE];
volatile uint8_t hmi_buffer_tx[HMI_BUFF_TX_SIZE];
volatile uint8_t bt_buffer_rx[BT_BUFF_RX_SIZE];
volatile uint8_t bt_buffer_tx[BT_BUFF_TX_SIZE];
volatile uint8_t line_buffer_rx[LINE_BUFF_RX_SIZE];
volatile uint8_t line_buffer_tx[LINE_BUFF_TX_SIZE];

volatile uint8_t bt_rx;
volatile uint8_t rx_pointer;
volatile uint16_t wheel;
volatile uint16_t speed;
volatile float velocity;

volatile uint32_t counter_reg_prev;
volatile uint32_t counter_reg;
volatile uint32_t delta_reg;
float T_sampling;

//
volatile uint8_t DebugMode;
volatile uint8_t Running;
volatile uint64_t Timestamp;
volatile float LinePositionFront;
volatile float LinePositionBack;
volatile float LineAngle;
volatile uint8_t LineNumFront;
volatile uint8_t LineNumBack;
volatile int16_t LinearX;
volatile int16_t LinearY;
volatile int16_t LinearZ;
volatile int16_t AngularX;
volatile int16_t AngularY;
volatile int16_t AngularZ;
volatile uint8_t DistanceFront;
volatile uint8_t DistanceLeft;
volatile uint8_t DistanceRight;
<<<<<<< HEAD

volatile float Speed;
=======
volatile uint16_t Speed;
volatile uint16_t SpeedSP;
>>>>>>> ciklusidofix
volatile uint8_t MotorCurrent;
volatile uint16_t SpeedSP;

volatile uint16_t SpeedSPGyors;
volatile uint16_t SpeedSPFek;
volatile uint16_t SpeedSPKanyar;

volatile float KpGyors;
volatile float KpKanyar;
volatile float KdGyors;
volatile float KdKanyar;

volatile uint8_t BatteryMotor;
volatile uint8_t BatteryLogic;
volatile uint8_t ServoPos;
volatile uint16_t LineInfra[64];

//Controller
//PID
volatile float Kp, Ki, Kd;

volatile uint64_t temp_reverse;

//FLAGS
volatile uint8_t LineDataReady;
volatile uint8_t LineDataWait;
volatile uint8_t SELFTEST;
volatile uint8_t DebugFirstRun;
volatile uint8_t DebugState;

//functions

void InitRegisters(void);

#endif /* REGISTER_MAP_H_ */
